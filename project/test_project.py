from project import is_prime
from project import generate_random_with_digits
from project import gcd

def test_is_prime():
    assert is_prime(2) == True
    assert is_prime(3) == True
    assert is_prime(4) == False
    assert is_prime(5) == True
    assert is_prime(6) == False
    assert is_prime(7) == True
    assert is_prime(484316003984363685869792638129) == True
    assert is_prime(5777) == False
    assert is_prime(97) == True
    assert is_prime(8101578604767946459378034714215237621546400479616719930365659138731248627779788234054076424372166499) == True
    assert True == is_prime(911190548340805099235571405942265350712590959230079865424782438293230313469227676909717626306624556917298640465204753026084044895707254201880576568812531618770199715211490800656580269204886498590513622168828437408007677742969950851698431017932880085019666186539417023108600887684170556603967503866749)
    assert True == is_prime(567706858971283836980074414239405384508963960582083966925670768872010474488880527959786360108628703226046764986985462368086640617199506179580319933282959149880518395013651438447946665151633829556800610795687315897772801820755934114202362536945716473240565251717411396998633823674957257098570793186583)

def test_generate_random_with_digits():
    assert 0 <= generate_random_with_digits(1) <= 9
    assert 10 <= generate_random_with_digits(2) <= 99
    assert 100000 <= generate_random_with_digits(6) <= 999999

def test_gcd():
    assert gcd(2, 9) == 1
    assert gcd(2, 4) == 2
    assert gcd(2, 2) == 2
    assert gcd(1, 1) == 1
    assert gcd(10, 100) == 10